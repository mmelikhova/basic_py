{"name": "test_add_group[None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [89: WOW_WOW:... footer2, ...] == [89: WOW_WOW:... footer2, ...]\n  Left contains one more item: None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x0489E1D8>, db = <fixture.db.DbFixture object at 0x0486AF28>\njson_groups = None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group=json_groups\n        with allure.step('Given a group list'):\n            old_groups=db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups=db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [89: WOW_WOW:... footer2, ...] == [89: WOW_WOW:... footer2, ...]\nE             Left contains one more item: None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz\nE             Use -v to get the full diff\n\ntest\\AddGroup.py:17: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1597426937485, "stop": 1597426937488}, {"name": "When I add a group None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz to the list", "status": "passed", "start": 1597426937488, "stop": 1597426938889}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [89: WOW_WOW:... footer2, ...] == [89: WOW_WOW:... footer2, ...]\n  Left contains one more item: None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Users\\mnurgale\\PycharmProjects\\basic_py\\test\\AddGroup.py\", line 17, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1597426938889, "stop": 1597426938893}], "parameters": [{"name": "json_groups", "value": "None: name: head)f$o#+eH.a>kDR: foot0}re<5R( X' bz"}], "start": 1597426937485, "stop": 1597426938894, "uuid": "50439a9f-b015-44ba-bf0e-c8249ba68721", "historyId": "49645fefb45ab1f6b3b15fa1f1716d33", "testCaseId": "e746ff593442e6473ea2e712c6b2797b", "fullName": "test.AddGroup#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "AddGroup"}, {"name": "host", "value": "SPBNB-PRC1220"}, {"name": "thread", "value": "14396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.AddGroup"}]}